using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Linq;
using System.Threading.Tasks;
using AngleSharp;

namespace CountryTagExtractor
{
    class Program
    {
        static async Task Main(string[] args)
        {
            string text =
            //"В Санкт-Петербурге находятся Конституционный суд Российской Федерации, Геральдический совет при Президенте Российской Федерации, органы власти Ленинградской области [11], Межпарламентская ассамблея СНГ. По состоянию на 2018 год в составе города федерального значения Санкт-Петербурга также находятся три города воинской славы: Кронштадт, Колпино, Ломоносов.Город — центр Санкт-Петербургской городской агломерации.второй по величине и значению город Литвы, административный центр Каунасского района, в 1919—1940 годах — временная столица Литовской Республики.В 1920 году в Каунасе был собран Учредительный Сейм, положивший начало законодательной системе государства.В Каунасе таким районом был пригород Вилиямполе (ранее — Слободка), куда принудительно заселили 30 тысяч евреев (Каунасское гетто (лит. Kauno getas).16 февраля 1989 года, в годовщину принятия акта о независимости Литвы 1918 года, кардинал Винцентас Сладкявичюс на проповеди в Каунасском кафедральном соборе впервые призвал к отделению от СССР.Город расположен почти в самом центре Литвы, у впадения реки Вилии (Нярис, лит. Neris) в Неман (Нямунас, лит. Nemunas) вблизи Каунасского водохранилища, 1897 год — в Лодзи родился историк-медиевист Генрик Пашкевич.Лодзь — один из крупнейших городов Польши.С 1999 года Лодзь — центр и крупнейший город Лодзинского воеводства. 1905 год — 17 мая была открыта первая в Польше детская больница им. Анны Марии (в память о скончавшейся внучке крупнейшего лодзинского фабриканта Карла В. Шейблера). В 1951 году она была переименована в больницу им. Януша Корчака. 1919 год — было создано Лодзинское воеводство во главе с Антонием Каменским.административный центр Шяуляйского уезда и Шяуляйского района. Крупный промышленный и культурный центр.В источниках, однако, указывается, что ...отождествление Сауле с Шяуляем вряд ли правильно..., а упомянутое в хронике место, скорее, имеет отношение к Вецсауле[3] (нем. Rahden)[4].В июле 1944 года войска 1-го Прибалтийского фронта под командованием маршала Баграмяна проводят Шяуляйскую наступательную операцию, В советское время город быстро растёт и к моменту обретения независимости население Шяуляя достигает исторического максимума. Холокост унес жизни 93 % шяуляйских евреев.Каза́нь (тат. Казан) — город в России, столица Республики Татарстан, крупный порт на левом берегу реки Волги при впадении в неё реки Казанки[5].  Казанский кремль входит в число объектов Всемирного наследия ЮНЕСКО.по приказу Ивана Грозного переселяли целыми слободами из разных русских городов, а казанские татары были выселены за стену деревянного посада Казани. Львов (укр. Львів, [ˈʎʋiu̯], произношение (инф.)) — город областного подчинения на Украине, областной центр Львовской области. Применительно ко Львову можно услышать разнообразные эпитеты, самыми известными из которых являются:  «О переименовании города Горького в город Нижний Новгород и Горьковской области в Нижегородскую область» городу возвращено историческое название Нижний Новгород[24]. В соответствии с применяемым временем и географической долготой[30] средний солнечный полдень в Нижнем Новгороде наступает в 12:04.Основная статья: Парки Нижнего Новгорода. Мариу́поль (укр. Маріу́поль, др.-греч. Μαριούπολις) — город Донецкой области на юго-востоке Украины, крупнейший город на берегу Азовского моря в устье рек Кальмиус и Кальчик. Центр Мариупольской агломерации. Численность наличного населения города на 1 января 2019 года составляет 440 367[4]; Основная доля загрязнения водных ресурсов региона Мариуполя,  В 1780 году в Мариуполе и в его окрестностях поселили выведенных в 1778 году из Крымского ханства православных греков (румеев и урумов). Значительный ущерб был нанесён Мариуполю во время Крымской войны 1853—1856 годов. Ионава[6], также — Йонава́[7] (лит. Jonava) — город в Литве, административный центр Ионавского района. В Екабпилсе расположены органы управления двух прилегающих краёв Латвии — Екабпилсского и Крустпилсского (сам город не входит ни в один из них). Ростов-на-Дону(в разговорной речи часто — Ростов) — крупнейший город на юго-западе России, административный центр Южного федерального округа и Ростовской области[6]. Город воинской славы (2008)[7]. Основная статья: Климат Ростова-на-Дону В соответствии с применяемым временем и географической долготой[18] средний солнечный полдень в Ростове-на-Дону наступает в 12:21. Относительно происхождения названия Белой Церкви существует несколько версий:  Палий в 1702 году с десятитысячным отрядом взял в осаду Белую Церковь.";
            //"Граничит с Витебской областью на севере, Гомельской на юге, Минской на западе. На востоке граничит с Брянской и Смоленской областями России. Площадь — 29 068 км²[3]. Рельеф преимущественно равнинный; крупнейшие реки — Днепр и его притоки (Сож, Березина). Самая высокая точка области располагается у железнодорожной станции Тёмный Лес на границе Дрибинского и Мстиславского районов (236 м[8]; по другим данным — 239 м[9]). Самая низкая точка области находится на берегу реки Сож возле деревни Гайшин в Славгородском районе (126 м).Крупнейшие водохранилища — Чигиринское на реке Друть(21,19 км²) и Осиповичское на реке Свислочь(11, 87 км²)[10]. По состоянию на 1 января 2018 года 38,2 % территории области занято лесными насаждениями. Самые лесистые районы расположены на юго-западе области — Кличевский(58, 9 %), Осиповичский(56, 5 %), Глусский(52, 7 %), а наименее лесистые на северо - востоке — Мстиславский(16, 4 %), Горецкий(16, 6 %), Шкловский(18, 2 %)[11]. 400 тыс.га лесов в области(31,8 % от площади лесного фонда) загрязнено цезием-137(в том числе на 400 га плотность загрязнения превышает 40 кюри / км², на 46 тыс.га — от 15 до 40 кюри / км²)[12].По объёму заготовки ликвидной древесины в 2017 году Могилёвская область уступает только Гомельской и Минской областям[13]. В области отсутствуют заповедники и национальные парки. 5 заказников республиканского значения занимают площадь 65,1 тыс.га(2, 2 % территории области), 66 заказников местного значения — 34,9 тыс.га(1, 2 %).На территории области расположены 14 памятников природы республиканского и 76 — местного значения[14].\nСреднегодовая температура — 6,2 °C(-5 °C в январе, 18, 3 °C в июле).";
            //"Впервые название появляется в рукописях XIV века в виде Warseuiensis (1321) и Varschewia (1342), а в XV веке как Warschouia (1482). Большинство историков и лингвистов считает, что название города произошло от притяжательного прилагательного Warszewa (или Warszowa) от имени Warsz (популярного в средневековье сокращения имени Warcisław, Wrocisław). Смена названия с Warszewa на Warszawa произошло в XVI веке, и связано это было с особенностями мазовецкого диалекта, на территории распространения которого расположена Варшава. В этом диалекте до конца XV века гласный a переходил в e после мягких согласных (а sz в польском языке на тот момент был мягким). В XV веке формы с вторичным e считались диалектными, поэтому люди, старавшиеся говорить на литературном языке, заменяли их формами с a. В случае с Варшавой же произошла замена этимологически правильной формы на гиперкорректную. Название Варшава может происходить и от венгерского варош «укреплённый город»[3]. В народе же распространено мнение, что название Warszawa появилось в результате соединения имени рыбака по имени Wars и русалки, прозванной Sawa, на которой рыбак женился. Образ Русалки Савы стал символом Варшавы[4]. Существует легенда об основании Варшавы: некий князь (властелин) по имени Казимир, заблудившись на охоте, набрёл на бедную рыбацкую хижину на берегу Вислы. Там он обнаружил молодую рыбачку, только родившую близнецов с именами Варш и Сава. Казимир стал их крёстным отцом и наградил семью рыбака за гостеприимство. Рыбак на эти деньги построил дом, вокруг которого стали селиться другие рыбаки, что положило начало Варшаве[5]. Символика Варшавская русалка Сирена (Syrena) Главным символом Варшавы безусловно считается Варшавская русалка. Её изображение можно встретить на гербе города. На Рыночной площади фольклорному существу поставлен памятник в стиле городской скульптуры. Герб Варшавы представляет собой красный французский щит, ленту с девизом, королевскую корону на верхней границе щита и Серебряный крест ордена Военных заслуг (Virtuti Militari) у язычка щита. Флаг Варшавы состоит из двух равновеликих горизонтальных полос красного и жёлтого окраса. Полотно должно быть исполнено в пропорции 5:8. История Основная статья: История Варшавы Средневековье Документально установлено, что с X века на территории современной Варшавы располагалось несколько поселений, среди которых наибольшего могущества достигли Bródno (то есть «брод», «переправа»), Jazdów и Kamion. Несмотря на это, первые деревянные постройки в Варшаве были сооружены мазовшанами в XII веке, а каменные — уже в целях обороны от Тевтонского ордена — в XIV веке. Новое время В начале XV—XVI веков Варшава — столица Мазовецкого княжества, в 1596—1795 — резиденция польских королей и великих князей литовских, в 1791—1795 столица Речи Посполитой, в 1807—13 годах — Варшавского герцогства (фактически под французским протекторатом), с 1815 по 1915 год — царства Польского (во владении Российской империи). С 1918 по 1939 год Варшава являлась столицей Республики Польша, а с 1952 по 1989 год — столицей Польской Народной Республики. В период оккупации 1939—1944 годов во время 2-й мировой войны административный центр Генерал-губернаторства располагался в Кракове. На протяжении Второй мировой войны центральная Польша, в частности Варшава, были под властью Генеральной губернии, нацистской колониальной администрации. Все учреждения высшего образования были закрыты и все еврейское население Варшавы — несколько сотен тысяч, приблизительно 30 % населения города — отправлено в Варшавское Гетто. 19 апреля 1943 поступил указ уничтожить гетто (это была часть гитлеровского «завершающего решения»). Евреи начали восстание, которое продолжалось почти месяц. Когда борьба закончилась, почти всех уцелевших уничтожили, только некоторые смогли сбежать или спрятаться. В июле 1944 Красная Армия вошла глубоко на польскую территорию, преследуя немцев на Варшавском направлении. Польское правительство в изгнании, которое находилось в Лондоне, отдало приказ подпольной Армии Крайовой (AK) освободить Варшаву от нацистов как раз перед приходом Красной Армии. И 1 августа 1944, когда 2-я танковая армия не вела активных наступательных действий и закреплялась на достигнутых рубежах[6], Армия Крайова начала Варшавское восстание (1944), которое длилось 63 дня, но, в конце концов, завершилось капитуляцией. Пленных повстанцев отконвоировали в лагеря пленных в Германии, а гражданское население депортировали. Гитлер, пренебрегая согласованными условиями капитуляции, приказал полностью уничтожить город, библиотеки и музеи вывести в Германию или сжечь. Около 85 % города было уничтожено, в частности, исторические места: Старе Място и Королевский замок. Варшава была освобождена 17 января 1945 советскими войсками в результате Висло-Одерской операции (см. также Польша во Второй мировой войне). Новейшее время После 2-й мировой войны город был восстановлен. Однако лишь наиболее старинная часть города, а именно Старый город, Новый город и Королевский тракт, а также отдельные ценные в памятно-архитектурном плане объекты были отреставрированы в исторической, хотя далеко не всегда в их исконной, форме. Так, например, в Старом городе за тщательно восстановленными фасадами скрываются современные по критериям послевоенного времени квартиры с совершенно иной планировкой и оснащением, нежели их исторические предшественники до 1939 г.";
            //"Жара не помеха для коронавируса. Новая вспышка в Китае и вторая волна в Иране Жаркая рабочая неделя окончательно добила в белорусах желание носить маски в людных общественных местах. Официальная статистика ударными темпами выписывает больных COVID-19, лабораторно подтвержденных заражений становится все меньше, чиновники от медицины обнадеживают спуском с плато заболеваемости. Чудо, не иначе. Хотя в остальном мире жара не помогает Мексике, Саудовской Аравии, Перу, Ирану, Бразилии — там ставят все новые рекорды по числу зараженных.Жара и вспышка в Пекине В воскресенье Китай сообщил о 57 новых случаях заражения коронавирусом SARS-CoV-2 — наибольший скачок за последние два месяца. 36 из этих заражений произошло в столице страны, Пекине. Все их связывают с крупнейшим оптовым рынком продуктов питания в городе. 27 пациентов непосредственно работали на рынке Синьфади, еще 9 контактировали с ними. При этом у одного человека пока нет симптомов COVID-19, а потому в официальную статистику он не попал. Теперь рынок закрыт, в соседней провинции Ляонин есть двое зараженных, которые также связаны с ним.38 случаев локальной передачи вируса — это очень много для Китая, который в последние месяцы регистрировал опасность по большей части среди тех, кто прибывал в страну из-за границы.Главный эпидемиолог Китайского центра по контролю и профилактике заболеваний сказал, что источником последней вспышки могут быть либо зараженные морепродукты или мясо с рынка, либо посетитель или работник, который по незнанию заразился вирусом. «Судя по обстоятельствам в Пекине, это будет первый сценарий», — считает он, так как образцы вируса были найдены на разделочных досках для приготовления лосося. Впрочем, любой контактировавший с этой доской мог быть носителем вируса. Так что обвинять рыбу пока рано.Последнюю неделю в Пекине стоит жуткая жара: столбик термометра днем скачет от 30 до 35 градусов тепла по Цельсию. На следующей неделе будет еще веселее: по прогнозам, дневная температура будет колебаться в пределах 35—38 градусов. Саудовская Аравия взбирается на пик Всю прошедшую неделю температура в Эр-Рияде не опускалась ниже 43 градусов по Цельсию. Прогноз на ближайшую неделю — 42 и выше, низкая влажность (около 15%), испепеляющее солнце. Казалось, что в середине мая Саудовская Аравия преодолела пик заболеваемости из-за коронавируса. Но с 6 июня в стране ежедневно ставят новые рекорды по числу зараженных (вчера — более 4 тыс.), все больше людей умирает. В апреле — мае по числу смертей в сутки эта ближневосточная страна чем-то напоминала Беларусь: 4—8 умерших. Однако каждую неделю эти показатели там растут. Сейчас в стране ежедневно регистрируют около 37 смертей от коронавируса. Основные карантинные мероприятия были проведены в стране в апреле и мае. В конце прошлого месяца началась первая фаза постепенного открытия Саудовской Аравии после карантина, но, как показывают цифры, все усилия по введению карантина оказались напрасными: очень скоро страна оказалась перед лицом настоящей вспышки коронавируса. Скорее нет, чем да Опыт таких стран, как Саудовская Аравия, показывает, что питаемые многими надежды на то, что коронавирус попросту растворится с приходом лета и жары, оказались ошибочными.Еще в апреле Национальная академия наук США заявляла, что экспериментальные исследования доказали взаимосвязь высоких температур, уровня влажности и выживаемости нового коронавируса в лабораторных условиях. «Есть много других факторов, помимо температуры окружающей среды, влажности и выживаемости вируса вне хозяина, которые влияют на скорость передачи среди людей в реальном мире», — подстелили тогда себе соломки ученые.Несколько месяцев спекуляций и экспертного анализа, десятки исследовательских публикаций… Доктор Фрэнсис Коллинз в июне обдал холодной водой тех, у кого были теплые сны о летнем сезоне, способном уничтожить COVID-19. Коллинз работает директором Национального института здоровья США. На сайте организации он опубликовал статью, где говорит, что для сбора убедительных данных и их анализа потребуются месяцы, но краткосрочные результаты заставляют усомниться в затишье.Компьютерное моделирование распространения вируса показывает, что основная причина любого увеличения или уменьшения уровня передачи имеет больше общего с иммунитетом человека к SARS-CoV-2 или его отсутствием, чем с погодными условиями. Без иммунитета даже самые полезные погодные условия не смогут замедлить дальнейшее распространение болезни.«Предварительные данные свидетельствуют о том, что климат может модулировать передачу атипичной пневмонии (SARS-CoV-2). Тем не менее остается неясным, могут ли сезонные и географические колебания климата существенно изменить траекторию пандемии, учитывая, что высокая восприимчивость является основной движущей силой», — говорится в исследовании. То есть надеяться, что новый вирус окажется таким же сезонным, как грипп или другие коронавирусы, нельзя, потому что сейчас большинство людей не имеют к нему иммунитета, в отличие от известных сезонных вирусов.«Мы обнаружили, что если для эндемических инфекций могут быть важны колебания погоды, то во время пандемической стадии нового патогена климат вызывает лишь скромные изменения масштабов пандемии», — резюмирует ученый.В трех сценариях моделирования фактор температуры окружающей среды имел большое значение для контроля вируса только тогда, когда бо́льшая часть жителей моделируемых населенных пунктов уже переболела COVID-19.В конце мая группа специалистов из шести научных институтов США провела совместное статистическое исследование, которое показало незначительное влияние жаркой погоды на коронавирусную инфекцию в Штатах. В некоторых наиболее горячих городах страны высокая температура может снизить уровень инфицирования на 40%, а в наиболее жарких частях Индии или Пакистана вероятность заражения может упасть наполовину. Все указывает на то, что некоторая роль погоды в распространении заразы есть, но только небольшая.И сейчас эти научные выкладки подтверждаются странами с тропическим климатом: жара не снижает число пациентов с COVID-19 существенно. На практике их количество, наоборот, растет. Иранская вторая волна Казалось, что Иран еще в марте пережил самый страшный удар эпидемии. 30 марта был достигнут пик диагностированных заражений за сутки — более 3 тыс. человек. Цифры упорно сползали вниз вплоть до мая. Затем были сняты те немногие ограничения на перемещение граждан, которые ввело правительство, и на страну накатила вторая волна. Новый антирекорд установили 4 июня — более 3,5 тыс. зараженных за сутки.26 мая в Иране открылись рестораны, кафе и музеи. Городская транспортная система оказалась забита людьми. Но если первоначальная вспышка случилась в городе Кум и столице Тегеране, то сейчас новые случаи в большинстве регистрируют в юго-западной провинции Хузестан на границе с Ираком. Впрочем, местные власти предпочитают объяснять такой рост зараженных тем, что в стране стали проводить больше тестов и выявлять людей с симптомами болезни в легкой форме.Однако тут есть элемент лукавства, поскольку увеличилось не только число тестов, но и процент положительных результатов.«Люди стали совершенно небрежно относиться к этой болезни, — заявил министр здравоохранения Саед Намаки в интервью государственному информационному агентству. — Если люди не соблюдают протоколы о здоровье, то нам стоит готовиться к ухудшению ситуации».Опрос иранского министерства здравоохранения показывает, что правила самоизоляции соблюдает только треть граждан, а правила социальной дистанции — 40% населения.Конечно, никакого серьезного разговора о возобновлении карантина в стране больше вести не собираются: его попросту не смогут себе позволить.«Лучше маски у нас ничего нет»О сезонности нового коронавируса SARS-CoV-2 можно будет серьезно говорить лишь после того, как большинство людей заразятся и благополучно переболеют им. Однако на текущей стадии эпидемии для вируса нет особого значения, какая температура и влажность за окном. Куда важнее оказывается тот факт, насколько широко распространено в обществе ношение масок. Азиатские страны, где лицевые маски уже давно стали едва ли не предметом личной гигиены, осознали это лучше других.Два профессора из Техаса опубликовали исследование в рецензируемом журнале, согласно которому обязательное ношение масок в Нью-Йорке в период с 6 апреля по 9 мая помогло избежать 66 тыс. дополнительных случаев заражения коронавирусом.«Эта недорогая практика в сочетании с социальным дистанцированием и другими процедурами является наиболее вероятной возможностью остановить пандемию COVID-19, — считают авторы работы. — Наше исследование очень четко установило, что использование маски не только полезно для предотвращения попадания инфицированных капель от кашля к неинфицированным людям, но и имеет решающее значение для этих незараженных людей в предотвращении вдыхания мельчайших атмосферных частиц, которые инфицированные люди выделяют при разговоре и которые могут оставаться в атмосфере десятки минут и перемещаться на десяток метров».Конечно, в летнюю жару далеко не каждый сможет нон-стоп носить маску, но стоит пытаться оградить себя и окружающих от потенциального воздействия вируса в людных местах.";
            //"МОСКВА, 19 июня/ Радио Sputnik. Верховный суд Нидерландов счел приемлемой кассационную жалобу РФ на решение Апелляционного суда Гааги о взыскании в пользу бывших акционеров ЮКОСа 57 миллиардов долларов. Об этом сообщается на сайте министерства юстиции России. Сперва арбитраж постановил взыскать с России 50 миллиардов долларов, позже это решение отменил Окружной суд Гааги, однако в феврале нынешнего года Апелляционный суд Гааги снова встал на сторону акционеров. Уточняется, что с учетом пеней сумма возросла до 57 миллиардов долларов. 'Девятнадцатого июня Верховный суд Нидерландов, опираясь на мнение прокуратуры Нидерландов, принял к рассмотрению кассационную жалобу РФ, в которой содержится требование отмены решения Апелляционного суда Гааги от 18 февраля 2020 года', – говорится в сообщении. Подчеркивается, что Верховному суду Нидерландов нужно оценить российские доводы о многочисленных юридических ошибках, допущенных, по мнению России, апелляционной инстанцией при толковании международного права. 'Российская Федерация будет последовательно отстаивать свои интересы как в кассационной инстанции Нидерландов, так и в других юрисдикциях', – поясняется на сайте. Ранее радио Sputnik сообщало, что арест товарных знаков на водку в Бенилюксе намерены обжаловать.";
            "БЕРЛИН, 19 июн - РИА Новости. Канцлер ФРГ Ангела Меркель призвала дождаться итогов судебного разбирательства по делу об убийстве гражданина Грузии в Берлине, прежде чем говорить о дальнейших мерах по данному делу. Ранее генпрокуратура ФРГ сообщила, что направила в суд дело гражданина России, который обвиняется в убийстве гражданина Грузии в Берлине в августе 2019 года. В этой связи посол России Сергей Нечаев был вызван в МИД Германии, заявил в четверг министр иностранных дел ФРГ Хайко Маас. Министр добавил, что 'правительство Германии безоговорочно оставляет за собой право на дальнейшие меры в этом случае'. Посол РФ в свою очередь заявил, что угрозы новых мер против РФ в случае их реализации не останутся без реакции. 'Мы (в ЕС) всегда сконцентрированы на (конкретных) поводах, один из них - конфликт на Украине, и об этих санкциях мы говорили. Второе - это заключение генпрокурора в связи с кибератаками на немецкий бундестаг, в этой связи на европейском уровне мы ведем переговоры. Третье - это выдвижение обвинения, там мы оставляем реакцию за собой, как заявил министр иностранных дел, но должны дождаться итогов', - сказала Меркель на пресс-конференции в Берлине. В прошлом году Германия объявил персонами нон грата двух сотрудников посольства РФ в Берлине в связи с убийством 40-летнего гражданина Грузии Зелимхана Хангошвили. Сразу после убийства в Берлине был задержан подозреваемый, который, по данным прокуратуры, является 49-летним россиянином. Президент РФ Владимир Путин проводит очередное совещание с руководством министерства обороны РФ и предприятий ОПК. 4 декабря 2019 10 декабря 2019, 10:02 'Жесткий и кровавый'. Путин об убитом в Берлине гражданине Грузии Президент России Владимир Путин заявлял, что вопросы о выдаче Хангошвили, который подозревается в России в террористической деятельности, обсуждались с Германией 'на уровне спецслужб неоднократно', однако 'официального запроса через прокуратуру действительно не было, потому что наши компетентные органы посчитали это бессмысленным', получив предварительный 'отрицательный ответ'. Как отмечал ранее российский лидер, убитый в Берлине принимал активное участие в боевых действиях на стороне сепаратистов на Кавказе, а также был одним из организаторов взрывов в московском метро. Путин отмечал, что этот человек находился в розыске, Россия неоднократно обращалась к ФРГ с просьбой его выдать, но не нашла понимания. По его словам, РФ будет 'делать все для того, чтобы в этом разобраться' и помочь немецким коллегам в расследовании. МИД РФ зимой этого года заявлял, что утверждения властей ФРГ о неудовлетворительном уровне содействия ведомств РФ в расследовании убийства Хангошвили неверны, 'контакты по этому делу осуществлялись с конца августа 2019 года по партнерским каналам, установленным между спецслужбами России и Германии'.";

            string cityTag;
            CountryTagExtractor.DefineCountryAndCityTags(text, out cityTag);
            //Console.WriteLine("City Tag - " + cityTag);
            //Console.ReadKey();
        }
    }

    static class CountryTagExtractor
    {
        static List<string[][]> countriesCitiesList = new List<string[][]>();

        private static void CountriesInfoSetter()
        {
            countriesCitiesList.Add(new string[][] {
                new string[] { "Беларусь", "РБ" },
                new string[] { "Минск", "Гомель", "Могилёв", "Гродно", "Витебск", "Брест", "Бобруйск", "Барановичи", "Борисов", "Пинск", "Орша", "Мозырь", "Солигорск", "Новополоцк", "Лида", "Молодечно", "Полоцк", "Жлобин", "Светлогорск", "Речица", "Жодино", "Слуцк", "Кобрин", "Слоним", "Волковыск", "Калинковичи", "Сморгонь", "Рогачёв", "Горки", "Осиповичи", "Берёза", "Новогрудок", "Дзержинск", "Вилейка", "Кричев", "Лунинец", "Ивацевичи", "Марьина Горка", "Поставы", "Глубокое", "Пружаны", "Добруш", "Лепель", "Быхов", "Столбцы", "Смолевичи", "Ошмяны", "Фаниполь", "Иваново", "Климовичи", "Шклов", "Костюковичи", "Житковичи", "Несвиж", "Мосты", "Заславль", "Щучин", "Дрогичин" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Россия", "РФ" },
                new string[] {"Москва", "Санкт-Петербург", "Новосибирск", "Екатеринбург", "Казань", "Нижний Новгород", "Челябинск", "Самара", "Омск", "Ростов-на-Дону", "Уфа", "Красноярск", "Воронеж", "Пермь", "Волгоград", "Краснодар", "Саратов", "Тюмень", "Тольятти", "Ижевск", "Барнаул", "Ульяновск", "Иркутск", "Хабаровск", "Ярославль", "Владивосток", "Махачкала", "Томск", "Оренбург", "Кемерово", "Новокузнецк", "Рязань", "Набережные Челны", "Астрахань", "Пенза", "Киров", "Липецк", "Балашиха" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Украина" },
                new string[] {"Киев", "Харьков", "Днепр", "Одесса", "Донецк", "Запорожье", "Львов", "Кривой Рог", "Николаев", "Мариуполь", "Луганск", "Макеевка", "Винница", "Симферополь", "Севастополь", "Херсон", "Полтава", "Чернигов", "Черкассы", "Сумы", "Горловка", "Хмельницкий", "Житомир", "Каменское", "Кропивницкий", "Ровно", "Черновцы", "Кременчуг", "Тернополь", "Ивано-Франковск", "Луцк", "Белая Церковь" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Польша"},
                new string[] { "Варшава", "Краков", "Лодзь", "Вроцлав", "Познань", "Гданьск", "Щецин", "Быдгощ", "Люблин", "Белосток", "Катовице", "Гдыня", "Ченстохова", "Радом", "Сосновец", "Торунь" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Литва" },
                new string[] { "Вильнюс", "Каунас", "Клайпеда", "Шяуляй", "Панявежис", "Алитус", "Мариямполе", "Мажейкяй", "Йонава" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Латвя" },
                new string[] {"Рига", "Даугавпилс", "Лиепая", "Елгава", "Юрмала", "Вентспилс", "Резекне", "Огре", "Валмиера", "Екабпилс" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Швейцария"},
                new string[] {"Цюрих", "Женева", "Базель", "Лозанна", "Берн", "Винтертур", "Санкт-Галлен", "Лугано", "Люцерн", "Биль", "Тун", "Кур", "Фрибур", "Шаффхаузен", "Невшатель" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Турция"},
                new string[] {"Стамбул", "Анкара", "Измир", "Бурса", "Адана", "Газиантеп", "Анталья", "Кайсери", "Мерсин", "Эскишехир", "Диярбакыр", "Денизли", "Шанлыурфа", "Самсун" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Грузия"},
                new string[] {"Тбилиси", "Батуми", "Кутаиси", "Рустави", "Гори", "Поти", "Зугдиди", "Хашури", "Самтредиа", "Марнеули", "Зестафони", "Телави", "Сенаки", "Кобулети" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Саудовская Аравия"},
                new string[] {"Эр-Рияд", "Джидда", "Мекка", "Медина", "Эд-Даммам", "Эль-Хуфуф", "Эт-Таиф", "Табук", "Бурайда", "Хамис-Мушайт", "Эль-Джубайль", "Хаиль", "Наджран", "Хафар-эль-Батин", "Эт-Тукба" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Нидерланды"},
                new string[] {"Амстердам", "Роттердам", "Гаага", "Утрехт", "Харлем", "Эйндховен", "Гронинген", "Арнем", "Лейден", "Бреда", "Энсхеде", "Тилбург", "Амерсфорт", "Дордрехт", "Неймеген" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Индонезия"},
                new string[] {"Джакарта", "Сурабая", "Бандунг", "Бекаси", "Медан", "Тангеранг", "Депок", "Семаранг", "Палембанг", "Южный Тангеранг", "Макассар", "Батам", "Пеканбару", "Богор", "Бандар-Лампунг" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Мексика"},
                new string[] {"Мехико", "Пуэбла", "Гвадалахара", "Сьюдад-Хуарес", "Тихуана", "Леон", "Сапопан", "Монтеррей", "Несауалькойотль", "Сан-Луис-Потоси", "Наукальпан-де-Хуарес", "Мерида", "Керетаро", "Агуаскальентес" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Австралия"},
                new string[] {"Сидней", "Мельбурн", "Брисбен", "Перт", "Аделаида", "Голд-Кост", "Ньюкасл", "Канберра", "Саншайн-Кост", "Вуллонгонг", "Джилонг", "Хобарт", "Таунсвилл", "Кэрнс", "Дарвин", "Тувумба", "Балларат", "Бендиго", "Олбери-Уодонга", "Лонсестон" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Испания"},
                new string[] {"Мадрид", "Барселона", "Валенсия", "Севилья", "Сарагоса", "Малага", "Мурсия", "Пальма", "Лас-Пальмас", "Бильбао", "Аликанте", "Кордова", "Вальядолид", "Виго", "Хихон", "Оспиталет", "Ла-Корунья", "Витория", "Гранада", "Эльче" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Тайвань"},
                new string[] {"Синьбэй", "Тайчжун", "Тайбэй", "Таоюань", "Тайнань", "Гаосюн", "Синьчжу", "Цзилун", "Цзяи", "Чжанхуа", "Пиндун", "Чжубэй", "Юаньлинь", "Доулю", "Тайдун" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Канада"},
                new string[] {"Торонто", "Монреаль", "Калгари", "Оттава", "Эдмонтон", "Миссиссога", "Виннипег", "Ванкувер", "Гамильтон", "Квебек", "Брамптон", "Саррей", "Галифакс", "Лаваль" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Республика Корея"},
                new string[] {"Сеул", "Пусан", "Инчхон", "Тэгу", "Тэджон", "Кванджу", "Сувон", "Ульсан", "Чханвон", "Коян", "Йонъин", "Соннам", "Пучхон", "Чхонджу", "Ансан" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Италия"},
                new string[] {"Рим", "Милан", "Неаполь", "Турин", "Палермо", "Генуя", "Болонья", "Флоренция", "Бари", "Катания", "Венеция", "Верона", "Мессина", "Падуя", "Триест", "Таранто", "Брешиа", "Прато", "Реджо-ди-Калабрия", "Модена" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Бразилия"},
                new string[] {"Сан-Паулу", "Рио-де-Жанейро", "Бразилиа", "Салвадор", "Форталеза", "Белу-Оризонти", "Манаус", "Куритиба", "Ресифи", "Гояния", "Белен", "Порту-Алегри", "Гуарульюс", "Кампинас", "Сан-Луис" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Индия"},
                new string[] {"Мумбаи", "Дели", "Бангалор", "Хайдарабад", "Ахмедабад", "Ченнаи", "Калькутта", "Сурат", "Пуна", "Джайпур", "Лакхнау", "Канпур", "Нагпур", "Индаур", "Тхане" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Франция"},
                new string[] {"Париж", "Марсель", "Лион", "Тулуза", "Ницца", "Нант", "Страсбург", "Монпелье", "Бордо", "Лилль", "Ренн", "Реймс", "Гавр", "Сент-Этьен", "Тулон", "Гренобль", "Дижон", "Анже", "Сен-Дени", "Вейёрбан" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Великобритания", "Британия"},
                new string[] {"Лондон", "Бирмингем", "Лидс", "Шеффилд", "Манчестер", "Ливерпуль", "Бристоль", "Ковентри", "Брадфорд", "Ноттингем", "Лестер", "Ньюкасл-апон-Тайн", "Кингстон-апон-Халл", "Плимут", "Сток-он-Трент", "Вулвергемптон", "Дерби", "Саутгемптон", "Портсмут" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Германия", "ФРГ"},
                new string[] {"Берлин", "Гамбург", "Мюнхен", "Кельн", "Франкфурт-на-Майне", "Штутгарт", "Дюссельдорф", "Дортмунд", "Эссен", "Бремен", "Дрезден", "Лейпциг", "Ганновер", "Нюрнберг", "Дуйсбург" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "США", "Штаты"},
                new string[] {"Калифорния", "Техас", "Флорида", "Вашингтон", "Нью-Йорк", "Лос-Анджелес", "Чикаго", "Хьюстон", "Финикс", "Филадельфия", "Сан-Антонио", "Сан-Диего", "Даллас", "Сан-Хосе", "Остин", "Джэксонвилл", "Форт-Уэрт", "Колумбус", "Сан-Франциско", "Шарлотт", "Индианаполис", "Сиэтл", "Денвер", "Вашингтон" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Китай"},
                new string[] {"Чунцин", "Шанхай ", "Пекин", "Тяньцзинь", "Гуанчжоу ", "Чэнду ", "Шэньчжэнь ", "Дунгуань ", "Ухань ", "Шэньян ", "Гаосюн", "Тайбэй" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Япония"},
                new string[] {"Токио", "Иокогама", "Осака", "Нагоя", "Саппоро", "Кобе", "Киото", "Фукуока", "Кавасаки", "Сайтама", "Хиросима", "Сендай", "Китакюсю", "Чиба", "Сакаи", "Ниигата", "Хамамацу", "Кумамото", "Сагамихара", "Сидзуока" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Швеция"},
                new string[] {"Стокгольм", "Гётеборг", "Мальмё", "Уппсала", "Вестерос", "Эребру", "Норрчёпинг", "Йёнчёпинг", "Умео", "Лунд", "Линчёпинг", "Бурос", "Хельсингборг", "Эскильстуна", "Евле" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Бельгия"},
                new string[] {"Антверпен", "Гент", "Шарлеруа", "Льеж", "Брюссель", "Брюгге", "Намюр", "Монс", "Лёвен", "Мехелен", "Алст", "Ла-Лувьер", "Кортрейк", "Хасселт", "Синт-Никлас", "Остенде" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Австрия"},
                new string[] {"Вена", "Грац", "Линц", "Зальцбург", "Инсбрук", "Клагенфурт", "Филлах", "Вельс", "Санкт-Пёльтен", "Дорнбирн", "Винер-Нойштадт", "Штайр", "Фельдкирх", "Брегенц", "Леобен" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Иран"},
                new string[] {"Тегеран", "Мешхед", "Исфахан", "Тебриз", "Кередж", "Шираз", "Ахваз", "Кум", "Керманшах", "Урмия", "Захедан", "Решт", "Керман", "Хамадан", "Эрак" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Норвегия"},
                new string[] {"Осло", "Берген", "Тронхейм", "Ставангер", "Сандвика", "Кристиансанн", "Фредрикстад", "Тромсё", "Драммен", "Сарпсборг", "Шиен", "Будё", "Саннефьорд", "Олесунн", "Ларвик" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "ОАЭ", "Объединённые Арабские Эмираты",},
                new string[] { "Дубай", "Абу-Даби", "Шарджа", "Эль-Айн", "Аджман", "Рас-эль-Хайма", "Эль-Фуджайра", "Умм-эль-Кайвайн", "Хаур-Факкан", "Джабаль-Али" }
            });
            countriesCitiesList.Add(new string[][] {
                new string[] { "Нигерия" },
                new string[] {"Лагос", "Ибадан", "Бенин-Сити", "Кано", "Порт-Харкорт", "Кадуна", "Аба", "Абуджа", "Майдугури", "Илорин" }
            });
        }

        //private static string[] belCities = new string[] { "Беларусь", 
        //    "Минск", "Гомель", "Могилёв", "Гродно", "Витебск", "Брест", "Бобруйск", "Барановичи", "Борисов", "Пинск", "Орша", "Мозырь", "Солигорск", "Новополоцк", "Лида", "Молодечно", "Полоцк", "Жлобин", "Светлогорск", "Речица", "Жодино", "Слуцк", "Кобрин", "Слоним", "Волковыск", "Калинковичи", "Сморгонь", "Рогачёв", "Горки", "Осиповичи", "Берёза", "Новогрудок", "Дзержинск", "Вилейка", "Кричев", "Лунинец", "Ивацевичи", "Марьина Горка", "Поставы", "Глубокое", "Пружаны", "Добруш", "Лепель", "Быхов", "Столбцы", "Смолевичи", "Ошмяны", "Фаниполь", "Иваново", "Климовичи", "Шклов", "Костюковичи", "Житковичи", "Несвиж", "Мосты", "Заславль", "Щучин", "Дрогичин" };
        //private static string[] rusCities = new string[] { "Россия", "РФ", 
        //    "Москва", "Санкт-Петербург", "Новосибирск", "Екатеринбург", "Казань", "Нижний Новгород", "Челябинск", "Самара", "Омск", "Ростов-на-Дону", "Уфа", "Красноярск", "Воронеж", "Пермь", "Волгоград", "Краснодар", "Саратов", "Тюмень", "Тольятти", "Ижевск", "Барнаул", "Ульяновск", "Иркутск", "Хабаровск", "Ярославль", "Владивосток", "Махачкала", "Томск", "Оренбург", "Кемерово", "Новокузнецк", "Рязань", "Набережные Челны", "Астрахань", "Пенза", "Киров", "Липецк", "Балашиха" };
        //private static string[] ukrCities = new string[] { "Украина", 
        //    "Киев", "Харьков", "Днепр", "Одесса", "Донецк", "Запорожье", "Львов", "Кривой Рог", "Николаев", "Мариуполь", "Луганск", "Макеевка", "Винница", "Симферополь", "Севастополь", "Херсон", "Полтава", "Чернигов", "Черкассы", "Сумы", "Горловка", "Хмельницкий", "Житомир", "Каменское", "Кропивницкий", "Ровно", "Черновцы", "Кременчуг", "Тернополь", "Ивано-Франковск", "Луцк", "Белая Церковь" };
        //private static string[] polCities = new string[] { "Польша", 
        //    "Варшава", "Краков", "Лодзь", "Вроцлав", "Познань", "Гданьск", "Щецин", "Быдгощ", "Люблин", "Белосток", "Катовице", "Гдыня", "Ченстохова", "Радом", "Сосновец", "Торунь" };
        //private static string[] lithCities = new string[] { "Литва", 
        //    "Вильнюс", "Каунас", "Клайпеда", "Шяуляй", "Панявежис", "Алитус", "Мариямполе", "Мажейкяй", "Йонава" };
        //private static string[] latCities = new string[] { "Латвя", 
        //    "Рига", "Даугавпилс", "Лиепая", "Елгава", "Юрмала", "Вентспилс", "Резекне", "Огре", "Валмиера", "Екабпилс" };
        //private static string[] swissCities = new string[] { "Швейцария",
        //    "Цюрих", "Женева", "Базель", "Лозанна", "Берн", "Винтертур", "Санкт-Галлен", "Лугано", "Люцерн", "Биль", "Тун", "Кур", "Фрибур", "Шаффхаузен", "Невшатель" };
        //private static string[] turkishCities = new string[] { "Турция", 
        //    "Стамбул", "Анкара", "Измир", "Бурса", "Адана", "Газиантеп", "Анталья", "Кайсери", "Мерсин", "Эскишехир", "Диярбакыр", "Денизли", "Шанлыурфа", "Самсун" };
        //private static string[] georgianCities = new string[] { "Грузия",
        //    "Тбилиси", "Батуми", "Кутаиси", "Рустави", "Гори", "Поти", "Зугдиди", "Хашури", "Самтредиа", "Марнеули", "Зестафони", "Телави", "Сенаки", "Кобулети" };
        //private static string[] arabianCities = new string[] { "Саудовская Аравия",
        //    "Эр-Рияд", "Джидда", "Мекка", "Медина", "Эд-Даммам", "Эль-Хуфуф", "Эт-Таиф", "Табук", "Бурайда", "Хамис-Мушайт", "Эль-Джубайль", "Хаиль", "Наджран", "Хафар-эль-Батин", "Эт-Тукба" };
        //private static string[] netherlandsCities = new string[] { "Нидерланды",
        //    "Амстердам", "Роттердам", "Гаага", "Утрехт", "Харлем", "Эйндховен", "Гронинген", "Арнем", "Лейден", "Бреда", "Энсхеде", "Тилбург", "Амерсфорт", "Дордрехт", "Неймеген" };
        //private static string[] indonesianCities = new string[] { "Индонезия", 
        //    "Джакарта", "Сурабая", "Бандунг", "Бекаси", "Медан", "Тангеранг", "Депок", "Семаранг", "Палембанг", "Южный Тангеранг", "Макассар", "Батам", "Пеканбару", "Богор", "Бандар-Лампунг" };
        //private static string[] mexicanCities = new string[] { "Мексика",
        //    "Мехико", "Пуэбла", "Гвадалахара", "Сьюдад-Хуарес", "Тихуана", "Леон", "Сапопан", "Монтеррей", "Несауалькойотль", "Сан-Луис-Потоси", "Наукальпан-де-Хуарес", "Мерида", "Керетаро", "Агуаскальентес" };
        //private static string[] australianCities = new string[] { "Австралия",
        //    "Сидней", "Мельбурн", "Брисбен", "Перт", "Аделаида", "Голд-Кост", "Ньюкасл", "Канберра", "Саншайн-Кост", "Вуллонгонг", "Джилонг", "Хобарт", "Таунсвилл", "Кэрнс", "Дарвин", "Тувумба", "Балларат", "Бендиго", "Олбери-Уодонга", "Лонсестон" };
        //private static string[] spanishCities = new string[] { "Испания", 
        //    "Мадрид", "Барселона", "Валенсия", "Севилья", "Сарагоса", "Малага", "Мурсия", "Пальма", "Лас-Пальмас", "Бильбао", "Аликанте", "Кордова", "Вальядолид", "Виго", "Хихон", "Оспиталет", "Ла-Корунья", "Витория", "Гранада", "Эльче" };
        //private static string[] taiwanCities = new string[] { "Тайвань", 
        //    "Синьбэй", "Тайчжун", "Тайбэй", "Таоюань", "Тайнань", "Гаосюн", "Синьчжу", "Цзилун", "Цзяи", "Чжанхуа", "Пиндун", "Чжубэй", "Юаньлинь", "Доулю", "Тайдун" };
        //private static string[] canadianCities = new string[] { "Канада", 
        //    "Торонто", "Монреаль", "Калгари", "Оттава", "Эдмонтон", "Миссиссога", "Виннипег", "Ванкувер", "Гамильтон", "Квебек", "Брамптон", "Саррей", "Галифакс", "Лаваль" };
        //private static string[] koreanCities = new string[] { "Республика Корея",
        //    "Сеул", "Пусан", "Инчхон", "Тэгу", "Тэджон", "Кванджу", "Сувон", "Ульсан", "Чханвон", "Коян", "Йонъин", "Соннам", "Пучхон", "Чхонджу", "Ансан" };
        //private static string[] italianCities = new string[] { "Италия", 
        //    "Рим", "Милан", "Неаполь", "Турин", "Палермо", "Генуя", "Болонья", "Флоренция", "Бари", "Катания", "Венеция", "Верона", "Мессина", "Падуя", "Триест", "Таранто", "Брешиа", "Прато", "Реджо-ди-Калабрия", "Модена" };
        //private static string[] brazilianCities = new string[] { "Бразилия",
        //    "Сан-Паулу", "Рио-де-Жанейро", "Бразилиа", "Салвадор", "Форталеза", "Белу-Оризонти", "Манаус", "Куритиба", "Ресифи", "Гояния", "Белен", "Порту-Алегри", "Гуарульюс", "Кампинас", "Сан-Луис" };
        //private static string[] indianCities = new string[] { "Индия",
        //    "Мумбаи", "Дели", "Бангалор", "Хайдарабад", "Ахмедабад", "Ченнаи", "Калькутта", "Сурат", "Пуна", "Джайпур", "Лакхнау", "Канпур", "Нагпур", "Индаур", "Тхане" };
        //private static string[] frenchCities = new string[] { "Франция",
        //    "Париж", "Марсель", "Лион", "Тулуза", "Ницца", "Нант", "Страсбург", "Монпелье", "Бордо", "Лилль", "Ренн", "Реймс", "Гавр", "Сент-Этьен", "Тулон", "Гренобль", "Дижон", "Анже", "Сен-Дени", "Вейёрбан" };
        //private static string[] britishCities = new string[] { "Великобритания", "Британия", 
        //    "Лондон", "Бирмингем", "Лидс", "Шеффилд", "Манчестер", "Ливерпуль", "Бристоль", "Ковентри", "Брадфорд", "Ноттингем", "Лестер", "Ньюкасл-апон-Тайн", "Кингстон-апон-Халл", "Плимут", "Сток-он-Трент", "Вулвергемптон", "Дерби", "Саутгемптон", "Портсмут" };
        //private static string[] germanCities = new string[] { "Германия", "ФРГ", 
        //    "Берлин", "Гамбург", "Мюнхен", "Кельн", "Франкфурт-на-Майне", "Штутгарт", "Дюссельдорф", "Дортмунд", "Эссен", "Бремен", "Дрезден", "Лейпциг", "Ганновер", "Нюрнберг", "Дуйсбург" };
        //private static string[] usaCities = new string[] { "США", "Штаты", 
        //    "Калифорния", "Техас", "Флорида", "Вашингтон", "Нью-Йорк", "Лос-Анджелес", "Чикаго", "Хьюстон", "Финикс", "Филадельфия", "Сан-Антонио", "Сан-Диего", "Даллас", "Сан-Хосе", "Остин", "Джэксонвилл", "Форт-Уэрт", "Колумбус", "Сан-Франциско", "Шарлотт", "Индианаполис", "Сиэтл", "Денвер", "Вашингтон" };
        //private static string[] chineseCities = new string[] { "Китай", 
        //    "Чунцин", "Шанхай ", "Пекин", "Тяньцзинь", "Гуанчжоу ", "Чэнду ", "Шэньчжэнь ", "Дунгуань ", "Ухань ", "Шэньян ", "Гаосюн", "Тайбэй" };
        //private static string[] japaneseCities = new string[] { "Япония", 
        //    "Токио", "Иокогама", "Осака", "Нагоя", "Саппоро", "Кобе", "Киото", "Фукуока", "Кавасаки", "Сайтама", "Хиросима", "Сендай", "Китакюсю", "Чиба", "Сакаи", "Ниигата", "Хамамацу", "Кумамото", "Сагамихара", "Сидзуока" };
        //private static string[] swedishCities = new string[] { "Швеция", 
        //    "Стокгольм", "Гётеборг", "Мальмё", "Уппсала", "Вестерос", "Эребру", "Норрчёпинг", "Йёнчёпинг", "Умео", "Лунд", "Линчёпинг", "Бурос", "Хельсингборг", "Эскильстуна", "Евле" };
        //private static string[] belgianCities = new string[] { "Бельгия", 
        //    "Антверпен", "Гент", "Шарлеруа", "Льеж", "Брюссель", "Брюгге", "Намюр", "Монс", "Лёвен", "Мехелен", "Алст", "Ла-Лувьер", "Кортрейк", "Хасселт", "Синт-Никлас", "Остенде" };
        //private static string[] austrianCities = new string[] { "Австрия", 
        //    "Вена", "Грац", "Линц", "Зальцбург", "Инсбрук", "Клагенфурт", "Филлах", "Вельс", "Санкт-Пёльтен", "Дорнбирн", "Винер-Нойштадт", "Штайр", "Фельдкирх", "Брегенц", "Леобен" };
        //private static string[] iranianCities = new string[] { "Иран", 
        //    "Тегеран", "Мешхед", "Исфахан", "Тебриз", "Кередж", "Шираз", "Ахваз", "Кум", "Керманшах", "Урмия", "Захедан", "Решт", "Керман", "Хамадан", "Эрак" };
        //private static string[] norwegianCities = new string[] { "Норвегия", 
        //    "Осло", "Берген", "Тронхейм", "Ставангер", "Сандвика", "Кристиансанн", "Фредрикстад", "Тромсё", "Драммен", "Сарпсборг", "Шиен", "Будё", "Саннефьорд", "Олесунн", "Ларвик" };
        //private static string[] uaeCities = new string[] { "ОАЭ", "Объединённые Арабские Эмираты", 
        //    "Дубай", "Абу-Даби", "Шарджа", "Эль-Айн", "Аджман", "Рас-эль-Хайма", "Эль-Фуджайра", "Умм-эль-Кайвайн", "Хаур-Факкан", "Джабаль-Али" };
        //private static string[] nigerianCities = new string[] { "Нигерия", 
        //    "Лагос", "Ибадан", "Бенин-Сити", "Кано", "Порт-Харкорт", "Кадуна", "Аба", "Абуджа", "Майдугури", "Илорин" };


        //private static string[][] countriesCities = { };
        //belCities, rusCities, ukrCities, polCities, lithCities, latCities, swissCities, turkishCities, georgianCities, arabianCities,
        //netherlandsCities, indonesianCities, mexicanCities, australianCities, spanishCities, taiwanCities, canadianCities, koreanCities, italianCities, brazilianCities,
        //indianCities, frenchCities, britishCities, germanCities, usaCities, chineseCities, japaneseCities, swedishCities, belgianCities, austrianCities, iranianCities,
        //norwegianCities, uaeCities, nigerianCities };

        public static string DefineCountryAndCityTags(string text, out string winnerCityName)
        {
            CountriesInfoSetter();
            Country[] countries = new Country[countriesCitiesList.Count];
            //Country[] countries = new Country[countriesCities.Length];

            for (int i = 0; i < countries.Length; i++)
            {
                countries[i] = new Country(countriesCitiesList[i][0][0], countriesCitiesList[i][1]);
                //countries[i] = new Country(countriesCitiesList[i][0], countriesCitiesList[i]);
                FindMentions(text, countries[i]);
                countries[i].СalculateСoefficient();
            }

            Country winnerCountry = countries.OrderByDescending(country => country.Coefficient).FirstOrDefault();
            KeyValuePair<string, int> winnerCity = winnerCountry.CitiesMentions.OrderByDescending(city => city.Value).FirstOrDefault();
            winnerCityName = winnerCity.Key;

            ShowFoundings(countries.OrderByDescending(country => country.Coefficient));

            Console.WriteLine("***" + winnerCountry.Name + " - " + winnerCountry.Coefficient);
            Console.WriteLine("***" + winnerCity.Key + " - " + winnerCity.Value);
            Console.ReadKey();

            return winnerCountry.Name;
        }

        private static void FindMentions(string text, Country country)
        {
            text = text.Replace('ё', 'е').Replace('й', 'и').Replace('Ё', 'Е').Replace('Й', 'И');
            MatchCollection matches;
            int count;

            for (int i = 0; i < country.Cities.Length; i++)
            {
                string cityNamePattern = CreatePattern(country.Cities[i]);
                matches = Regex.Matches(text, cityNamePattern);
                count = matches.Count;

                if (count > 0)
                {
                    //searching mentions of country name
                    if (i == 0) country.CountryMentions.Add(country.Cities[i], count);
                    //searching mentions of name of every city
                    else country.CitiesMentions.Add(country.Cities[i], count);
                }
            }
        }

        private static string[] CutWordsEnding(string word)
        {
            word = word.Replace('ё', 'е').Replace('й', 'и').Replace('Ё', 'Е').Replace('Й', 'И');

            string[] cityName;
            if (word.Contains(' ')) { cityName = word.Split(' '); }
            else if (word.Contains('-')) { cityName = word.Split('-'); }
            else { cityName = new string[] { word }; }

            char[] lettersToTrim = { 'а', 'я', 'о', 'у', 'ю', 'э', 'е', 'и', 'ы', 'ь', 'ъ', ' ' };
            for (int i = 0; i < cityName.Length; i++)
            {
                int length = -1;
                while (length != cityName[i].Length)
                {
                    length = cityName[i].Length;
                    cityName[i] = cityName[i].TrimEnd(lettersToTrim);
                }
            }
            return cityName;
        }

        private static string CreatePattern(string word)
        {
            string pattern = "";
            string[] wordsStems = CutWordsEnding(word);

            if (wordsStems.Length == 1)
            {
                pattern += "(" + wordsStems[0] + @"[а-я]*|" + wordsStems[0].ToUpper() + @"[А-Я]*)";
            }
            else
            {
                for (int j = 0; j < wordsStems.Length; j++)
                    pattern += "(" + wordsStems[j] + @"[а-я]*|" + wordsStems[j].ToUpper() + @"[А-Я]*)[-\s]";

                pattern = pattern.Remove(pattern.Length - 5);
            }
            return pattern;
        }

        private static void ShowFoundings(IOrderedEnumerable<Country> countries)
        {
            foreach (Country c in countries)
            {
                Console.WriteLine("**********" + c.Name + "**********");
                foreach (var fc in c.CountryMentions)
                    Console.WriteLine(fc.Key + " - " + fc.Value);
                foreach (var fc in c.CitiesMentions)
                    Console.Write(fc.Key + " - " + fc.Value + " ");
                Console.WriteLine();
                Console.WriteLine("******************************");
            }
        }
    }
}
