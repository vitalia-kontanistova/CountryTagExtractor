using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Linq;
using System.Threading.Tasks;
using AngleSharp;

namespace CountryTagExtractor
{
    //*********delete before production*********
    class Program
    {
        static void Main(string[] args)
        {
            string text =
            "БЕРЛИН, 19 июн - РИА Новости. Канцлер ФРГ Ангела Меркель призвала дождаться итогов судебного разбирательства по делу об убийстве гражданина Грузии в Берлине, прежде чем говорить о дальнейших мерах по данному делу. Ранее генпрокуратура ФРГ сообщила, что направила в суд дело гражданина России, который обвиняется в убийстве гражданина Грузии в Берлине в августе 2019 года. В этой связи посол России Сергей Нечаев был вызван в МИД Германии, заявил в четверг министр иностранных дел ФРГ Хайко Маас. Министр добавил, что 'правительство Германии безоговорочно оставляет за собой право на дальнейшие меры в этом случае'. Посол РФ в свою очередь заявил, что угрозы новых мер против РФ в случае их реализации не останутся без реакции. 'Мы (в ЕС) всегда сконцентрированы на (конкретных) поводах, один из них - конфликт на Украине, и об этих санкциях мы говорили. Второе - это заключение генпрокурора в связи с кибератаками на немецкий бундестаг, в этой связи на европейском уровне мы ведем переговоры. Третье - это выдвижение обвинения, там мы оставляем реакцию за собой, как заявил министр иностранных дел, но должны дождаться итогов', - сказала Меркель на пресс-конференции в Берлине. В прошлом году Германия объявил персонами нон грата двух сотрудников посольства РФ в Берлине в связи с убийством 40-летнего гражданина Грузии Зелимхана Хангошвили. Сразу после убийства в Берлине был задержан подозреваемый, который, по данным прокуратуры, является 49-летним россиянином. Президент РФ Владимир Путин проводит очередное совещание с руководством министерства обороны РФ и предприятий ОПК. 4 декабря 2019 10 декабря 2019, 10:02 'Жесткий и кровавый'. Путин об убитом в Берлине гражданине Грузии Президент России Владимир Путин заявлял, что вопросы о выдаче Хангошвили, который подозревается в России в террористической деятельности, обсуждались с Германией 'на уровне спецслужб неоднократно', однако 'официального запроса через прокуратуру действительно не было, потому что наши компетентные органы посчитали это бессмысленным', получив предварительный 'отрицательный ответ'. Как отмечал ранее российский лидер, убитый в Берлине принимал активное участие в боевых действиях на стороне сепаратистов на Кавказе, а также был одним из организаторов взрывов в московском метро. Путин отмечал, что этот человек находился в розыске, Россия неоднократно обращалась к ФРГ с просьбой его выдать, но не нашла понимания. По его словам, РФ будет 'делать все для того, чтобы в этом разобраться' и помочь немецким коллегам в расследовании. МИД РФ зимой этого года заявлял, что утверждения властей ФРГ о неудовлетворительном уровне содействия ведомств РФ в расследовании убийства Хангошвили неверны, 'контакты по этому делу осуществлялись с конца августа 2019 года по партнерским каналам, установленным между спецслужбами России и Германии'.";

            string cityTag;
            string countryTag;
            CountryTagExtractor.DefineCountryAndCityTags(text, out cityTag, out countryTag);
        }
    }

    static class CountryTagExtractor
    {
        static List<string[][]> countriesInfoList = new List<string[][]>();

        private static void InitializeCountriesInfo()
        {
            countriesInfoList.Add(new string[][] {
                new string[] { "Беларусь", "РБ" },
                new string[] { "Минск", "Гомель", "Могилёв", "Гродно", "Витебск", "Брест", "Бобруйск", "Барановичи", "Борисов", "Пинск", "Орша", "Мозырь", "Солигорск", "Новополоцк", "Лида", "Молодечно", "Полоцк", "Жлобин", "Светлогорск", "Речица", "Жодино", "Слуцк", "Кобрин", "Слоним", "Волковыск", "Калинковичи", "Сморгонь", "Рогачёв", "Горки", "Осиповичи", "Берёза", "Новогрудок", "Дзержинск", "Вилейка", "Кричев", "Лунинец", "Ивацевичи", "Марьина Горка", "Поставы", "Глубокое", "Пружаны", "Добруш", "Лепель", "Быхов", "Столбцы", "Смолевичи", "Ошмяны", "Фаниполь", "Иваново", "Климовичи", "Шклов", "Костюковичи", "Житковичи", "Несвиж", "Мосты", "Заславль", "Щучин", "Дрогичин" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Россия", "РФ", "Российская Федерация" },
                new string[] {"Москва", "Санкт-Петербург", "Новосибирск", "Екатеринбург", "Казань", "Нижний Новгород", "Челябинск", "Самара", "Омск", "Ростов-на-Дону", "Уфа", "Красноярск", "Воронеж", "Пермь", "Волгоград", "Краснодар", "Саратов", "Тюмень", "Тольятти", "Ижевск", "Барнаул", "Ульяновск", "Иркутск", "Хабаровск", "Ярославль", "Владивосток", "Махачкала", "Томск", "Оренбург", "Кемерово", "Новокузнецк", "Рязань", "Набережные Челны", "Астрахань", "Пенза", "Киров", "Липецк", "Балашиха" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Украина" },
                new string[] {"Киев", "Харьков", "Днепр", "Одесса", "Донецк", "Запорожье", "Львов", "Кривой Рог", "Николаев", "Мариуполь", "Луганск", "Макеевка", "Винница", "Симферополь", "Севастополь", "Херсон", "Полтава", "Чернигов", "Черкассы", "Сумы", "Горловка", "Хмельницкий", "Житомир", "Каменское", "Кропивницкий", "Ровно", "Черновцы", "Кременчуг", "Тернополь", "Ивано-Франковск", "Луцк", "Белая Церковь" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Польша"},
                new string[] { "Варшава", "Краков", "Лодзь", "Вроцлав", "Познань", "Гданьск", "Щецин", "Быдгощ", "Люблин", "Белосток", "Катовице", "Гдыня", "Ченстохова", "Радом", "Сосновец", "Торунь" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Литва" },
                new string[] { "Вильнюс", "Каунас", "Клайпеда", "Шяуляй", "Панявежис", "Алитус", "Мариямполе", "Мажейкяй", "Йонава" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Латвя" },
                new string[] {"Рига", "Даугавпилс", "Лиепая", "Елгава", "Юрмала", "Вентспилс", "Резекне", "Огре", "Валмиера", "Екабпилс" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Швейцария"},
                new string[] {"Цюрих", "Женева", "Базель", "Лозанна", "Берн", "Винтертур", "Санкт-Галлен", "Лугано", "Люцерн", "Биль", "Тун", "Кур", "Фрибур", "Шаффхаузен", "Невшатель" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Турция"},
                new string[] {"Стамбул", "Анкара", "Измир", "Бурса", "Адана", "Газиантеп", "Анталья", "Кайсери", "Мерсин", "Эскишехир", "Диярбакыр", "Денизли", "Шанлыурфа", "Самсун" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Грузия"},
                new string[] {"Тбилиси", "Батуми", "Кутаиси", "Рустави", "Гори", "Поти", "Зугдиди", "Хашури", "Самтредиа", "Марнеули", "Зестафони", "Телави", "Сенаки", "Кобулети" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Саудовская Аравия"},
                new string[] {"Эр-Рияд", "Джидда", "Мекка", "Медина", "Эд-Даммам", "Эль-Хуфуф", "Эт-Таиф", "Табук", "Бурайда", "Хамис-Мушайт", "Эль-Джубайль", "Хаиль", "Наджран", "Хафар-эль-Батин", "Эт-Тукба" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Нидерланды"},
                new string[] {"Амстердам", "Роттердам", "Гаага", "Утрехт", "Харлем", "Эйндховен", "Гронинген", "Арнем", "Лейден", "Бреда", "Энсхеде", "Тилбург", "Амерсфорт", "Дордрехт", "Неймеген" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Индонезия"},
                new string[] {"Джакарта", "Сурабая", "Бандунг", "Бекаси", "Медан", "Тангеранг", "Депок", "Семаранг", "Палембанг", "Южный Тангеранг", "Макассар", "Батам", "Пеканбару", "Богор", "Бандар-Лампунг" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Мексика"},
                new string[] {"Мехико", "Пуэбла", "Гвадалахара", "Сьюдад-Хуарес", "Тихуана", "Леон", "Сапопан", "Монтеррей", "Несауалькойотль", "Сан-Луис-Потоси", "Наукальпан-де-Хуарес", "Мерида", "Керетаро", "Агуаскальентес" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Австралия"},
                new string[] {"Сидней", "Мельбурн", "Брисбен", "Перт", "Аделаида", "Голд-Кост", "Ньюкасл", "Канберра", "Саншайн-Кост", "Вуллонгонг", "Джилонг", "Хобарт", "Таунсвилл", "Кэрнс", "Дарвин", "Тувумба", "Балларат", "Бендиго", "Олбери-Уодонга", "Лонсестон" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Испания"},
                new string[] {"Мадрид", "Барселона", "Валенсия", "Севилья", "Сарагоса", "Малага", "Мурсия", "Пальма", "Лас-Пальмас", "Бильбао", "Аликанте", "Кордова", "Вальядолид", "Виго", "Хихон", "Оспиталет", "Ла-Корунья", "Витория", "Гранада", "Эльче" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Тайвань"},
                new string[] {"Синьбэй", "Тайчжун", "Тайбэй", "Таоюань", "Тайнань", "Гаосюн", "Синьчжу", "Цзилун", "Цзяи", "Чжанхуа", "Пиндун", "Чжубэй", "Юаньлинь", "Доулю", "Тайдун" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Канада"},
                new string[] {"Торонто", "Монреаль", "Калгари", "Оттава", "Эдмонтон", "Миссиссога", "Виннипег", "Ванкувер", "Гамильтон", "Квебек", "Брамптон", "Саррей", "Галифакс", "Лаваль" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Республика Корея"},
                new string[] {"Сеул", "Пусан", "Инчхон", "Тэгу", "Тэджон", "Кванджу", "Сувон", "Ульсан", "Чханвон", "Коян", "Йонъин", "Соннам", "Пучхон", "Чхонджу", "Ансан" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Италия"},
                new string[] {"Рим", "Милан", "Неаполь", "Турин", "Палермо", "Генуя", "Болонья", "Флоренция", "Бари", "Катания", "Венеция", "Верона", "Мессина", "Падуя", "Триест", "Таранто", "Брешиа", "Прато", "Реджо-ди-Калабрия", "Модена" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Бразилия"},
                new string[] {"Сан-Паулу", "Рио-де-Жанейро", "Бразилиа", "Салвадор", "Форталеза", "Белу-Оризонти", "Манаус", "Куритиба", "Ресифи", "Гояния", "Белен", "Порту-Алегри", "Гуарульюс", "Кампинас", "Сан-Луис" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Индия"},
                new string[] {"Мумбаи", "Дели", "Бангалор", "Хайдарабад", "Ахмедабад", "Ченнаи", "Калькутта", "Сурат", "Пуна", "Джайпур", "Лакхнау", "Канпур", "Нагпур", "Индаур", "Тхане" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Франция"},
                new string[] {"Париж", "Марсель", "Лион", "Тулуза", "Ницца", "Нант", "Страсбург", "Монпелье", "Бордо", "Лилль", "Ренн", "Реймс", "Гавр", "Сент-Этьен", "Тулон", "Гренобль", "Дижон", "Анже", "Сен-Дени", "Вейёрбан" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Великобритания", "Британия"},
                new string[] {"Лондон", "Бирмингем", "Лидс", "Шеффилд", "Манчестер", "Ливерпуль", "Бристоль", "Ковентри", "Брадфорд", "Ноттингем", "Лестер", "Ньюкасл-апон-Тайн", "Кингстон-апон-Халл", "Плимут", "Сток-он-Трент", "Вулвергемптон", "Дерби", "Саутгемптон", "Портсмут" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Германия", "ФРГ"},
                new string[] {"Берлин", "Гамбург", "Мюнхен", "Кельн", "Франкфурт-на-Майне", "Штутгарт", "Дюссельдорф", "Дортмунд", "Эссен", "Бремен", "Дрезден", "Лейпциг", "Ганновер", "Нюрнберг", "Дуйсбург" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "США", "Штаты"},
                new string[] {"Калифорния", "Техас", "Флорида", "Вашингтон", "Нью-Йорк", "Лос-Анджелес", "Чикаго", "Хьюстон", "Финикс", "Филадельфия", "Сан-Антонио", "Сан-Диего", "Даллас", "Сан-Хосе", "Остин", "Джэксонвилл", "Форт-Уэрт", "Колумбус", "Сан-Франциско", "Шарлотт", "Индианаполис", "Сиэтл", "Денвер", "Вашингтон" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Китай"},
                new string[] {"Чунцин", "Шанхай ", "Пекин", "Тяньцзинь", "Гуанчжоу ", "Чэнду ", "Шэньчжэнь ", "Дунгуань ", "Ухань ", "Шэньян ", "Гаосюн", "Тайбэй" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Япония"},
                new string[] {"Токио", "Иокогама", "Осака", "Нагоя", "Саппоро", "Кобе", "Киото", "Фукуока", "Кавасаки", "Сайтама", "Хиросима", "Сендай", "Китакюсю", "Чиба", "Сакаи", "Ниигата", "Хамамацу", "Кумамото", "Сагамихара", "Сидзуока" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Швеция"},
                new string[] {"Стокгольм", "Гётеборг", "Мальмё", "Уппсала", "Вестерос", "Эребру", "Норрчёпинг", "Йёнчёпинг", "Умео", "Лунд", "Линчёпинг", "Бурос", "Хельсингборг", "Эскильстуна", "Евле" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Бельгия"},
                new string[] {"Антверпен", "Гент", "Шарлеруа", "Льеж", "Брюссель", "Брюгге", "Намюр", "Монс", "Лёвен", "Мехелен", "Алст", "Ла-Лувьер", "Кортрейк", "Хасселт", "Синт-Никлас", "Остенде" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Австрия"},
                new string[] {"Вена", "Грац", "Линц", "Зальцбург", "Инсбрук", "Клагенфурт", "Филлах", "Вельс", "Санкт-Пёльтен", "Дорнбирн", "Винер-Нойштадт", "Штайр", "Фельдкирх", "Брегенц", "Леобен" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Иран"},
                new string[] {"Тегеран", "Мешхед", "Исфахан", "Тебриз", "Кередж", "Шираз", "Ахваз", "Кум", "Керманшах", "Урмия", "Захедан", "Решт", "Керман", "Хамадан", "Эрак" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Норвегия"},
                new string[] {"Осло", "Берген", "Тронхейм", "Ставангер", "Сандвика", "Кристиансанн", "Фредрикстад", "Тромсё", "Драммен", "Сарпсборг", "Шиен", "Будё", "Саннефьорд", "Олесунн", "Ларвик" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "ОАЭ", "Объединённые Арабские Эмираты",},
                new string[] { "Дубай", "Абу-Даби", "Шарджа", "Эль-Айн", "Аджман", "Рас-эль-Хайма", "Эль-Фуджайра", "Умм-эль-Кайвайн", "Хаур-Факкан", "Джабаль-Али" }
            });
            countriesInfoList.Add(new string[][] {
                new string[] { "Нигерия" },
                new string[] {"Лагос", "Ибадан", "Бенин-Сити", "Кано", "Порт-Харкорт", "Кадуна", "Аба", "Абуджа", "Майдугури", "Илорин" }
            });
        }

        public static void DefineCountryAndCityTags(string text, out string winnerCityName, out string winnerCountryName)
        {
            InitializeCountriesInfo();
            Country[] countries = new Country[countriesInfoList.Count];
            winnerCountryName = "";
            winnerCityName = "";

            for (int i = 0; i < countries.Length; i++)
            {
                countries[i] = new Country(countriesInfoList[i][0], countriesInfoList[i][1]);
                FindMentions(text, countries[i]);
            }

            Country possibleCountry = countries.OrderByDescending(country => country.Coefficient).FirstOrDefault();
            if (possibleCountry.Coefficient > 0)
            {
                Country winnerCountry = possibleCountry;
                winnerCountryName = winnerCountry.Name[0];
                KeyValuePair<string, int> winnerCity = winnerCountry.CitiesMentions.OrderByDescending(city => city.Value).FirstOrDefault();
                winnerCityName = winnerCity.Key;
            }

            //*********delete before production*********
            ShowFoundings(countries.OrderByDescending(country => country.Coefficient));
            Console.WriteLine("***" + winnerCountryName + "***");
            Console.WriteLine("***" + winnerCityName + "***");
            Console.ReadKey();
        }

        private static void FindMentions(string text, Country country)
        {
            text = text.Replace('ё', 'е').Replace('й', 'и').Replace('Ё', 'Е').Replace('Й', 'И');
            string pattern;
            MatchCollection matches;

            //searching mentions of country name
            for (int i = 0; i < country.Name.Length; i++)
            {
                pattern = CreatePattern(country.Name[i]);
                matches = Regex.Matches(text, pattern);

                if (matches.Count > 0)
                    country.CountryMentions.Add(country.Name[i], matches.Count);
            }

            //searching mentions of name of every city
            for (int i = 0; i < country.Cities.Length; i++)
            {
                pattern = CreatePattern(country.Cities[i]);
                matches = Regex.Matches(text, pattern);

                if (matches.Count > 0)
                    country.CitiesMentions.Add(country.Cities[i], matches.Count);
            }

            country.СalculateСoefficient();
        }

        private static string CreatePattern(string word)
        {
            string pattern = "";
            word = word.Replace('ё', 'е').Replace('й', 'и').Replace('Ё', 'Е').Replace('Й', 'И');

            string[] wordsStems;
            if (word.Contains(" ")) wordsStems = word.Split(" ");
            else if (word.Contains("-")) wordsStems = word.Split("-");
            else wordsStems = new string[] { word };

            for (int j = 0; j < wordsStems.Length; j++)
                pattern += "(" + wordsStems[j] + "|" + wordsStems[j].ToUpper() + @")[-\s]";

            return pattern.Remove(pattern.Length - 5);
        }

        //private static string[] CutWordsEnding(string word)
        //{
        //    word = word.Replace('ё', 'е').Replace('й', 'и').Replace('Ё', 'Е').Replace('Й', 'И');

        //    string[] cityName;
        //    if (word.Contains(' ')) cityName = word.Split(' ');
        //    else if (word.Contains('-')) cityName = word.Split('-');
        //    else cityName = new string[] { word };

        //    char[] lettersToTrim = { 'а', 'я', 'о', 'у', 'ю', 'э', 'е', 'и', 'ы', 'ь', 'ъ', ' ' };
        //    for (int i = 0; i < cityName.Length; i++)
        //    {
        //        int length = -1;
        //        while (length != cityName[i].Length)
        //        {
        //            length = cityName[i].Length;
        //            cityName[i] = cityName[i].TrimEnd(lettersToTrim);
        //        }
        //    }
        //    return cityName;
        //}

        //private static string CreatePattern(string word)
        //{
        //    string pattern = "";
        //    string[] wordsStems = CutWordsEnding(word);

        //    if (wordsStems.Length == 1)
        //    {
        //        pattern += "(" + wordsStems[0] + @"[а-я]*|" + wordsStems[0].ToUpper() + @"[А-Я]*)";
        //    }
        //    else
        //    {
        //        for (int j = 0; j < wordsStems.Length; j++)
        //            pattern += "(" + wordsStems[j] + @"[а-я]*|" + wordsStems[j].ToUpper() + @"[А-Я]*)[-\s]";

        //        pattern = pattern.Remove(pattern.Length - 5);
        //    }
        //    return pattern;
        //}

        private static void ShowFoundings(IOrderedEnumerable<Country> countries)
        //*********delete before production*********
        {
            foreach (Country c in countries)
            {
                Console.WriteLine("**********" + c.Name[0] + "**********");
                foreach (var fc in c.CountryMentions)
                    Console.Write(fc.Key + " - " + fc.Value + " ");
                Console.WriteLine();
                foreach (var fc in c.CitiesMentions)
                    Console.Write(fc.Key + " - " + fc.Value + " ");
                Console.WriteLine();
                Console.WriteLine("******************************");
            }
        }
    }
}
